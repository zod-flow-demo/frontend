/**
 * This file is AUTO GENERATED by [msw-auto-mock](https://github.com/zoubingwu/msw-auto-mock)
 * Feel free to commit/edit it as you need.
 */
/* eslint-disable */
/* tslint:disable */
import { rest } from 'mswx'
import { faker } from '@faker-js/faker'
import { generateMock } from '@anatine/zod-mock'
import { schemas } from '../../src/api/api.client'

faker.seed(1)

const MAX_ARRAY_LENGTH = 20

interface Nexts {
  [key: string]: number
}
const nexts: Nexts = {}
let nextValue = 0

const NextMiddleware = rest.middleware((req, res, ctx, next) => {
  const { pathname } = req.url
  if (!nexts[pathname]) {
    nexts[pathname] = 0
  }
  nextValue = nexts[pathname]++
  return next()
})

rest.config.API_PREFIX = 'http://localhost:3000'
export const handlers = [
  rest.get(`/todos`, (_, res, ctx) => {
    const resultArray = [
      [ctx.status(200), ctx.json(getGetAllTodos200Response())],
    ]

    return res(...resultArray[nextValue % resultArray.length])
  }),
  rest.post(`/todos`, (_, res, ctx) => {
    const resultArray = [
      [ctx.status(201), ctx.json(getCreateTodo201Response())],
      [ctx.status(400), ctx.json(getCreateTodo400Response())],
    ]

    return res(...resultArray[nextValue % resultArray.length])
  }),
  rest.get(`/todos/:id`, (_, res, ctx) => {
    const resultArray = [
      [ctx.status(200), ctx.json(getGetTodoById200Response())],
      [ctx.status(404), ctx.json(getGetTodoById404Response())],
    ]

    return res(...resultArray[nextValue % resultArray.length])
  }),
  rest.patch(`/todos/:id`, (_, res, ctx) => {
    const resultArray = [
      [ctx.status(200), ctx.json(getUpdateTodoById200Response())],
      [ctx.status(400), ctx.json(getUpdateTodoById400Response())],
      [ctx.status(404), ctx.json(getUpdateTodoById404Response())],
    ]

    return res(...resultArray[nextValue % resultArray.length])
  }),
  rest.delete(`/todos/:id`, (_, res, ctx) => {
    const resultArray = [
      [ctx.status(204)],
      [ctx.status(404), ctx.json(getDeleteTodoById404Response())],
    ]

    return res(...resultArray[nextValue % resultArray.length])
  }),
].map(NextMiddleware)

export function getGetAllTodos200Response() {
  return [
    ...new Array(faker.number.int({ min: 1, max: MAX_ARRAY_LENGTH })).keys(),
  ].map((_) => generateMock(schemas.TodoItem))
}

export function getCreateTodo201Response() {
  return generateMock(schemas.TodoItem)
}

export function getCreateTodo400Response() {
  return generateMock(schemas.TodoError)
}

export function getGetTodoById200Response() {
  return generateMock(schemas.TodoItem)
}

export function getGetTodoById404Response() {
  return generateMock(schemas.TodoError)
}

export function getUpdateTodoById200Response() {
  return generateMock(schemas.TodoItem)
}

export function getUpdateTodoById400Response() {
  return generateMock(schemas.TodoError)
}

export function getUpdateTodoById404Response() {
  return generateMock(schemas.TodoError)
}

export function getDeleteTodoById404Response() {
  return generateMock(schemas.TodoError)
}
